/*! For license information please see hooks-useAddProtocol-useAddProtocol-stories.e3156fbc.iframe.bundle.js.LICENSE.txt */
(self.webpackChunk_mapcomponents_react_maplibre=self.webpackChunk_mapcomponents_react_maplibre||[]).push([[843],{13434:(e,t,o)=>{"use strict";o.r(t),o.d(t,{CSVOrTSV:()=>q,CSVWithOptions:()=>Y,CatalogueDemo:()=>ne,GPX:()=>Q,KML:()=>ee,MbTiles:()=>K,OSM:()=>Z,TCX:()=>te,Topojson:()=>oe,__namedExportsOrder:()=>re,default:()=>G});var a=o(96540),n=o(61224),r=o(19741),i=o(73896),l=o(47839),s=o(28161),p=o(33551),c=o(15826),u=o.n(c),m=o(75616);function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function y(){y=function(){return t};var e,t={},o=Object.prototype,a=o.hasOwnProperty,n=Object.defineProperty||function(e,t,o){e[t]=o.value},r="function"==typeof Symbol?Symbol:{},i=r.iterator||"@@iterator",l=r.asyncIterator||"@@asyncIterator",s=r.toStringTag||"@@toStringTag";function p(e,t,o){return Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{p({},"")}catch(e){p=function(e,t,o){return e[t]=o}}function c(e,t,o,a){var r=t&&t.prototype instanceof g?t:g,i=Object.create(r.prototype),l=new E(a||[]);return n(i,"_invoke",{value:_(e,o,l)}),i}function u(e,t,o){try{return{type:"normal",arg:e.call(t,o)}}catch(e){return{type:"throw",arg:e}}}t.wrap=c;var m="suspendedStart",f="suspendedYield",h="executing",b="completed",x={};function g(){}function w(){}function v(){}var k={};p(k,i,(function(){return this}));var j=Object.getPrototypeOf,S=j&&j(j(I([])));S&&S!==o&&a.call(S,i)&&(k=S);var L=v.prototype=g.prototype=Object.create(k);function A(e){["next","throw","return"].forEach((function(t){p(e,t,(function(e){return this._invoke(t,e)}))}))}function O(e,t){function o(n,r,i,l){var s=u(e[n],e,r);if("throw"!==s.type){var p=s.arg,c=p.value;return c&&"object"==d(c)&&a.call(c,"__await")?t.resolve(c.__await).then((function(e){o("next",e,i,l)}),(function(e){o("throw",e,i,l)})):t.resolve(c).then((function(e){p.value=e,i(p)}),(function(e){return o("throw",e,i,l)}))}l(s.arg)}var r;n(this,"_invoke",{value:function(e,a){function n(){return new t((function(t,n){o(e,a,t,n)}))}return r=r?r.then(n,n):n()}})}function _(t,o,a){var n=m;return function(r,i){if(n===h)throw new Error("Generator is already running");if(n===b){if("throw"===r)throw i;return{value:e,done:!0}}for(a.method=r,a.arg=i;;){var l=a.delegate;if(l){var s=z(l,a);if(s){if(s===x)continue;return s}}if("next"===a.method)a.sent=a._sent=a.arg;else if("throw"===a.method){if(n===m)throw n=b,a.arg;a.dispatchException(a.arg)}else"return"===a.method&&a.abrupt("return",a.arg);n=h;var p=u(t,o,a);if("normal"===p.type){if(n=a.done?b:f,p.arg===x)continue;return{value:p.arg,done:a.done}}"throw"===p.type&&(n=b,a.method="throw",a.arg=p.arg)}}}function z(t,o){var a=o.method,n=t.iterator[a];if(n===e)return o.delegate=null,"throw"===a&&t.iterator.return&&(o.method="return",o.arg=e,z(t,o),"throw"===o.method)||"return"!==a&&(o.method="throw",o.arg=new TypeError("The iterator does not provide a '"+a+"' method")),x;var r=u(n,t.iterator,o.arg);if("throw"===r.type)return o.method="throw",o.arg=r.arg,o.delegate=null,x;var i=r.arg;return i?i.done?(o[t.resultName]=i.value,o.next=t.nextLoc,"return"!==o.method&&(o.method="next",o.arg=e),o.delegate=null,x):i:(o.method="throw",o.arg=new TypeError("iterator result is not an object"),o.delegate=null,x)}function P(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function T(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function E(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(P,this),this.reset(!0)}function I(t){if(t||""===t){var o=t[i];if(o)return o.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,r=function o(){for(;++n<t.length;)if(a.call(t,n))return o.value=t[n],o.done=!1,o;return o.value=e,o.done=!0,o};return r.next=r}}throw new TypeError(d(t)+" is not iterable")}return w.prototype=v,n(L,"constructor",{value:v,configurable:!0}),n(v,"constructor",{value:w,configurable:!0}),w.displayName=p(v,s,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===w||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,v):(e.__proto__=v,p(e,s,"GeneratorFunction")),e.prototype=Object.create(L),e},t.awrap=function(e){return{__await:e}},A(O.prototype),p(O.prototype,l,(function(){return this})),t.AsyncIterator=O,t.async=function(e,o,a,n,r){void 0===r&&(r=Promise);var i=new O(c(e,o,a,n),r);return t.isGeneratorFunction(o)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},A(L),p(L,s,"Generator"),p(L,i,(function(){return this})),p(L,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),o=[];for(var a in t)o.push(a);return o.reverse(),function e(){for(;o.length;){var a=o.pop();if(a in t)return e.value=a,e.done=!1,e}return e.done=!0,e}},t.values=I,E.prototype={constructor:E,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(T),!t)for(var o in this)"t"===o.charAt(0)&&a.call(this,o)&&!isNaN(+o.slice(1))&&(this[o]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var o=this;function n(a,n){return l.type="throw",l.arg=t,o.next=a,n&&(o.method="next",o.arg=e),!!n}for(var r=this.tryEntries.length-1;r>=0;--r){var i=this.tryEntries[r],l=i.completion;if("root"===i.tryLoc)return n("end");if(i.tryLoc<=this.prev){var s=a.call(i,"catchLoc"),p=a.call(i,"finallyLoc");if(s&&p){if(this.prev<i.catchLoc)return n(i.catchLoc,!0);if(this.prev<i.finallyLoc)return n(i.finallyLoc)}else if(s){if(this.prev<i.catchLoc)return n(i.catchLoc,!0)}else{if(!p)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return n(i.finallyLoc)}}}},abrupt:function(e,t){for(var o=this.tryEntries.length-1;o>=0;--o){var n=this.tryEntries[o];if(n.tryLoc<=this.prev&&a.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var r=n;break}}r&&("break"===e||"continue"===e)&&r.tryLoc<=t&&t<=r.finallyLoc&&(r=null);var i=r?r.completion:{};return i.type=e,i.arg=t,r?(this.method="next",this.next=r.finallyLoc,x):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),x},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var o=this.tryEntries[t];if(o.finallyLoc===e)return this.complete(o.completion,o.afterLoc),T(o),x}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var o=this.tryEntries[t];if(o.tryLoc===e){var a=o.completion;if("throw"===a.type){var n=a.arg;T(o)}return n}}throw new Error("illegal catch attempt")},delegateYield:function(t,o,a){return this.delegate={iterator:I(t),resultName:o,nextLoc:a},"next"===this.method&&(this.arg=e),x}},t}function f(e,t,o,a,n,r,i){try{var l=e[r](i),s=l.value}catch(e){return void o(e)}l.done?t(s):Promise.resolve(s).then(a,n)}function h(e){return function(){var t=this,o=arguments;return new Promise((function(a,n){var r=e.apply(t,o);function i(e){f(r,a,n,i,l,"next",e)}function l(e){f(r,a,n,i,l,"throw",e)}i(void 0)}))}}var b={},x=function(){var e=h(y().mark((function e(t){var o,a,n,r,i;return y().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(o=t.filename,b[o]){e.next=13;break}return e.next=4,u()();case 4:return a=e.sent,e.next=7,fetch(o);case 7:return n=e.sent,e.next=10,n.arrayBuffer();case 10:r=e.sent,i=new a.Database(new Uint8Array(r)),b[o]=i;case 13:return e.abrupt("return",b[o]);case 14:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}();function g(e){return w.apply(this,arguments)}function w(){return(w=h(y().mark((function e(t){var o,a;return y().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,x(t);case 2:return o=e.sent,a="SELECT tile_data FROM tiles WHERE zoom_level = "+t.z+" AND tile_column = "+t.x+" AND tile_row = "+(Math.pow(2,parseInt(t.z))-parseInt(t.y)-1),e.abrupt("return",new Promise((function(e,t){try{var n,r=o.exec(a);if(1!==r.length)return void t(new Error("Tile not found."));var i,l=r[0].values[0][0];if(null===(n=i=31===l[0]&&139===l[1]?m.UD(l):l)||void 0===n||!n.buffer)return void t(new Error("Tile not found."));e(i.buffer)}catch(e){t(e)}})));case 5:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var v=function(){var e=h(y().mark((function e(t){var o,a;return y().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return void 0,r=void 0,void 0,void 0,void 0,void 0,i=(r=((n=t.url.split("://")).length>2?n[1]+"://"+n[2]:n[1]).split("/")).length,l=r.splice(i-1,1)[0],s=r.splice(i-2,1)[0],p=r.splice(i-3,1)[0],o={filename:r.join("/"),z:p,x:s,y:l},e.next=3,g(o);case 3:if(!(a=e.sent)){e.next=6;break}return e.abrupt("return",{data:a});case 6:throw new Error("Tile not found"+o.filename);case 7:case"end":return e.stop()}var n,r,i,l,s,p}),e)})));return function(t){return e.apply(this,arguments)}}(),k=o(18821),j=o(64427),S=o(46256),L=o(64564),A=o(21568),O=o(73641),_=o(40554),z=o(61102),P=o(77070),T=o(72545),E=o(64541),I=o(30799),H=o(65754),B=o(10280);const M={version:8,name:"OSM Bright",metadata:{"mapbox:type":"template","mapbox:groups":{1444849364238.8171:{collapsed:!1,name:"Buildings"},1444849354174.1904:{collapsed:!0,name:"Tunnels"},1444849388993.3071:{collapsed:!1,name:"Land"},1444849242106.713:{collapsed:!1,name:"Places"},1444849382550.77:{collapsed:!1,name:"Water"},1444849345966.4436:{collapsed:!1,name:"Roads"},1444849334699.1902:{collapsed:!0,name:"Bridges"}},"mapbox:autocomposite":!1,"openmaptiles:version":"3.x","openmaptiles:mapbox:owner":"openmaptiles","openmaptiles:mapbox:source:url":"mapbox://openmaptiles.4qljc88t"},center:[8.542,47.372],zoom:11.6,bearing:0,pitch:0,sources:{openmaptiles:{type:"vector",url:B.A.sourceOptions_tiles}},sprite:B.A.sprite,glyphs:B.A.glyphs,layers:[{id:"background",type:"background",paint:{"background-color":"#f8f4f0"}},{id:"landcover-glacier",type:"fill",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"landcover",filter:["==","subclass","glacier"],layout:{visibility:"visible"},paint:{"fill-color":"#fff","fill-opacity":{base:1,stops:[[0,.9],[10,.3]]}}},{id:"landuse-residential",type:"fill",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"landuse",filter:["==","class","residential"],paint:{"fill-color":{base:1,stops:[[12,"hsla(30, 19%, 90%, 0.4)"],[16,"hsla(30, 19%, 90%, 0.2)"]]}}},{id:"landuse-commercial",type:"fill",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"landuse",filter:["all",["==","$type","Polygon"],["==","class","commercial"]],paint:{"fill-color":"hsla(0, 60%, 87%, 0.23)"}},{id:"landuse-industrial",type:"fill",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"landuse",filter:["all",["==","$type","Polygon"],["==","class","industrial"]],paint:{"fill-color":"hsla(49, 100%, 88%, 0.34)"}},{id:"park",type:"fill",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"park",filter:["==","$type","Polygon"],paint:{"fill-color":"#d8e8c8","fill-opacity":{base:1.8,stops:[[9,.5],[12,.2]]}}},{id:"park-outline",type:"line",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"park",filter:["==","$type","Polygon"],layout:{},paint:{"line-color":{base:1,stops:[[6,"hsla(96, 40%, 49%, 0.36)"],[8,"hsla(96, 40%, 49%, 0.66)"]]},"line-dasharray":[3,3]}},{id:"landuse-cemetery",type:"fill",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"landuse",filter:["==","class","cemetery"],paint:{"fill-color":"#e0e4dd"}},{id:"landuse-hospital",type:"fill",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"landuse",filter:["==","class","hospital"],paint:{"fill-color":"#fde"}},{id:"landuse-school",type:"fill",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"landuse",filter:["==","class","school"],paint:{"fill-color":"#f0e8f8"}},{id:"landuse-railway",type:"fill",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"landuse",filter:["==","class","railway"],paint:{"fill-color":"hsla(30, 19%, 90%, 0.4)"}},{id:"landcover-wood",type:"fill",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"landcover",filter:["==","class","wood"],paint:{"fill-color":"#6a4","fill-opacity":.1,"fill-outline-color":"hsla(0, 0%, 0%, 0.03)","fill-antialias":{base:1,stops:[[0,!1],[9,!0]]}}},{id:"landcover-grass",type:"fill",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"landcover",filter:["==","class","grass"],paint:{"fill-color":"#d8e8c8","fill-opacity":1}},{id:"landcover-grass-park",type:"fill",metadata:{"mapbox:group":"1444849388993.3071"},source:"openmaptiles","source-layer":"park",filter:["==","class","public_park"],paint:{"fill-color":"#d8e8c8","fill-opacity":.8}},{id:"waterway-other",type:"line",metadata:{"mapbox:group":"1444849382550.77"},source:"openmaptiles","source-layer":"waterway",filter:["!in","class","canal","river","stream"],layout:{"line-cap":"round"},paint:{"line-color":"#a0c8f0","line-width":{base:1.3,stops:[[13,.5],[20,2]]}}},{id:"waterway-stream-canal",type:"line",metadata:{"mapbox:group":"1444849382550.77"},source:"openmaptiles","source-layer":"waterway",filter:["in","class","canal","stream"],layout:{"line-cap":"round"},paint:{"line-color":"#a0c8f0","line-width":{base:1.3,stops:[[13,.5],[20,6]]}}},{id:"waterway-river",type:"line",metadata:{"mapbox:group":"1444849382550.77"},source:"openmaptiles","source-layer":"waterway",filter:["==","class","river"],layout:{"line-cap":"round"},paint:{"line-color":"#a0c8f0","line-width":{base:1.2,stops:[[10,.8],[20,6]]}}},{id:"water-offset",type:"fill",metadata:{"mapbox:group":"1444849382550.77"},source:"openmaptiles","source-layer":"water",maxzoom:8,filter:["==","$type","Polygon"],layout:{visibility:"visible"},paint:{"fill-opacity":1,"fill-color":"#a0c8f0","fill-translate":{base:1,stops:[[6,[2,0]],[8,[0,0]]]}}},{id:"water",type:"fill",metadata:{"mapbox:group":"1444849382550.77"},source:"openmaptiles","source-layer":"water",layout:{visibility:"visible"},paint:{"fill-color":"hsl(210, 67%, 85%)"}},{id:"water-pattern",type:"fill",metadata:{"mapbox:group":"1444849382550.77"},source:"openmaptiles","source-layer":"water",layout:{visibility:"visible"},paint:{"fill-translate":[0,2.5],"fill-pattern":"wave"}},{id:"landcover-ice-shelf",type:"fill",metadata:{"mapbox:group":"1444849382550.77"},source:"openmaptiles","source-layer":"landcover",filter:["==","subclass","ice_shelf"],layout:{visibility:"visible"},paint:{"fill-color":"#fff","fill-opacity":{base:1,stops:[[0,.9],[10,.3]]}}},{id:"building",type:"fill",metadata:{"mapbox:group":"1444849364238.8171"},source:"openmaptiles","source-layer":"building",paint:{"fill-color":{base:1,stops:[[15.5,"#f2eae2"],[16,"#dfdbd7"]]},"fill-antialias":!0}},{id:"building-top",type:"fill",metadata:{"mapbox:group":"1444849364238.8171"},source:"openmaptiles","source-layer":"building",layout:{visibility:"visible"},paint:{"fill-translate":{base:1,stops:[[14,[0,0]],[16,[-2,-2]]]},"fill-outline-color":"#dfdbd7","fill-color":"#f2eae2","fill-opacity":{base:1,stops:[[13,0],[16,1]]}}},{id:"tunnel-service-track-casing",type:"line",metadata:{"mapbox:group":"1444849354174.1904"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","tunnel"],["in","class","service","track"]],layout:{"line-join":"round"},paint:{"line-color":"#cfcdca","line-dasharray":[.5,.25],"line-width":{base:1.2,stops:[[15,1],[16,4],[20,11]]}}},{id:"tunnel-minor-casing",type:"line",metadata:{"mapbox:group":"1444849354174.1904"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","tunnel"],["==","class","minor"]],layout:{"line-join":"round"},paint:{"line-color":"#cfcdca","line-opacity":{stops:[[12,0],[12.5,1]]},"line-width":{base:1.2,stops:[[12,.5],[13,1],[14,4],[20,15]]}}},{id:"tunnel-secondary-tertiary-casing",type:"line",metadata:{"mapbox:group":"1444849354174.1904"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","tunnel"],["in","class","secondary","tertiary"]],layout:{"line-join":"round"},paint:{"line-color":"#e9ac77","line-opacity":1,"line-width":{base:1.2,stops:[[8,1.5],[20,17]]}}},{id:"tunnel-trunk-primary-casing",type:"line",metadata:{"mapbox:group":"1444849354174.1904"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","tunnel"],["in","class","primary","trunk"]],layout:{"line-join":"round"},paint:{"line-color":"#e9ac77","line-width":{base:1.2,stops:[[5,.4],[6,.6],[7,1.5],[20,22]]}}},{id:"tunnel-motorway-casing",type:"line",metadata:{"mapbox:group":"1444849354174.1904"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","tunnel"],["==","class","motorway"]],layout:{"line-join":"round",visibility:"visible"},paint:{"line-color":"#e9ac77","line-dasharray":[.5,.25],"line-width":{base:1.2,stops:[[5,.4],[6,.6],[7,1.5],[20,22]]}}},{id:"tunnel-path",type:"line",metadata:{"mapbox:group":"1444849354174.1904"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","$type","LineString"],["all",["==","brunnel","tunnel"],["==","class","path"]]],paint:{"line-color":"#cba","line-dasharray":[1.5,.75],"line-width":{base:1.2,stops:[[15,1.2],[20,4]]}}},{id:"tunnel-service-track",type:"line",metadata:{"mapbox:group":"1444849354174.1904"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","tunnel"],["in","class","service","track"]],layout:{"line-join":"round"},paint:{"line-color":"#fff","line-width":{base:1.2,stops:[[15.5,0],[16,2],[20,7.5]]}}},{id:"tunnel-minor",type:"line",metadata:{"mapbox:group":"1444849354174.1904"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","tunnel"],["==","class","minor_road"]],layout:{"line-join":"round"},paint:{"line-color":"#fff","line-opacity":1,"line-width":{base:1.2,stops:[[13.5,0],[14,2.5],[20,11.5]]}}},{id:"tunnel-secondary-tertiary",type:"line",metadata:{"mapbox:group":"1444849354174.1904"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","tunnel"],["in","class","secondary","tertiary"]],layout:{"line-join":"round"},paint:{"line-color":"#fff4c6","line-width":{base:1.2,stops:[[6.5,0],[7,.5],[20,10]]}}},{id:"tunnel-trunk-primary",type:"line",metadata:{"mapbox:group":"1444849354174.1904"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","tunnel"],["in","class","primary","trunk"]],layout:{"line-join":"round"},paint:{"line-color":"#fff4c6","line-width":{base:1.2,stops:[[6.5,0],[7,.5],[20,18]]}}},{id:"tunnel-motorway",type:"line",metadata:{"mapbox:group":"1444849354174.1904"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","tunnel"],["==","class","motorway"]],layout:{"line-join":"round",visibility:"visible"},paint:{"line-color":"#ffdaa6","line-width":{base:1.2,stops:[[6.5,0],[7,.5],[20,18]]}}},{id:"tunnel-railway",type:"line",metadata:{"mapbox:group":"1444849354174.1904"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","tunnel"],["==","class","rail"]],paint:{"line-color":"#bbb","line-width":{base:1.4,stops:[[14,.4],[15,.75],[20,2]]},"line-dasharray":[2,2]}},{id:"aeroway-taxiway-casing",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"aeroway",minzoom:12,filter:["all",["in","class","taxiway"]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"rgba(153, 153, 153, 1)","line-width":{base:1.5,stops:[[11,2],[17,12]]},"line-opacity":1}},{id:"aeroway-runway-casing",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"aeroway",minzoom:12,filter:["all",["in","class","runway"]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"rgba(153, 153, 153, 1)","line-width":{base:1.5,stops:[[11,5],[17,55]]},"line-opacity":1}},{id:"aeroway-area",type:"fill",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"aeroway",minzoom:4,filter:["all",["==","$type","Polygon"],["in","class","runway","taxiway"]],layout:{visibility:"visible"},paint:{"fill-opacity":{base:1,stops:[[13,0],[14,1]]},"fill-color":"rgba(255, 255, 255, 1)"}},{id:"aeroway-taxiway",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"aeroway",minzoom:4,filter:["all",["in","class","taxiway"],["==","$type","LineString"]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"rgba(255, 255, 255, 1)","line-width":{base:1.5,stops:[[11,1],[17,10]]},"line-opacity":{base:1,stops:[[11,0],[12,1]]}}},{id:"aeroway-runway",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"aeroway",minzoom:4,filter:["all",["in","class","runway"],["==","$type","LineString"]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"rgba(255, 255, 255, 1)","line-width":{base:1.5,stops:[[11,4],[17,50]]},"line-opacity":{base:1,stops:[[11,0],[12,1]]}}},{id:"highway-area",type:"fill",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",filter:["==","$type","Polygon"],layout:{visibility:"visible"},paint:{"fill-color":"hsla(0, 0%, 89%, 0.56)","fill-outline-color":"#cfcdca","fill-opacity":.9,"fill-antialias":!1}},{id:"highway-motorway-link-casing",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",minzoom:12,filter:["all",["!in","brunnel","bridge","tunnel"],["==","class","motorway_link"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#e9ac77","line-opacity":1,"line-width":{base:1.2,stops:[[12,1],[13,3],[14,4],[20,15]]}}},{id:"highway-link-casing",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",minzoom:13,filter:["all",["!in","brunnel","bridge","tunnel"],["in","class","primary_link","secondary_link","tertiary_link","trunk_link"]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"#e9ac77","line-opacity":1,"line-width":{base:1.2,stops:[[12,1],[13,3],[14,4],[20,15]]}}},{id:"highway-minor-casing",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","$type","LineString"],["all",["!=","brunnel","tunnel"],["in","class","minor","service","track"]]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#cfcdca","line-opacity":{stops:[[12,0],[12.5,1]]},"line-width":{base:1.2,stops:[[12,.5],[13,1],[14,4],[20,15]]}}},{id:"highway-secondary-tertiary-casing",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",filter:["all",["!in","brunnel","bridge","tunnel"],["in","class","secondary","tertiary"]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"#e9ac77","line-opacity":1,"line-width":{base:1.2,stops:[[8,1.5],[20,17]]}}},{id:"highway-primary-casing",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",minzoom:5,filter:["all",["!in","brunnel","bridge","tunnel"],["in","class","primary"]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"#e9ac77","line-opacity":{stops:[[7,0],[8,1]]},"line-width":{base:1.2,stops:[[7,0],[8,.6],[9,1.5],[20,22]]}}},{id:"highway-trunk-casing",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",minzoom:5,filter:["all",["!in","brunnel","bridge","tunnel"],["in","class","trunk"]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"#e9ac77","line-opacity":{stops:[[5,0],[6,1]]},"line-width":{base:1.2,stops:[[5,0],[6,.6],[7,1.5],[20,22]]}}},{id:"highway-motorway-casing",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",minzoom:4,filter:["all",["!in","brunnel","bridge","tunnel"],["==","class","motorway"]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"#e9ac77","line-width":{base:1.2,stops:[[4,0],[5,.4],[6,.6],[7,1.5],[20,22]]},"line-opacity":{stops:[[4,0],[5,1]]}}},{id:"highway-path",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","$type","LineString"],["all",["!in","brunnel","bridge","tunnel"],["==","class","path"]]],paint:{"line-color":"#cba","line-dasharray":[1.5,.75],"line-width":{base:1.2,stops:[[15,1.2],[20,4]]}}},{id:"highway-motorway-link",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",minzoom:12,filter:["all",["!in","brunnel","bridge","tunnel"],["==","class","motorway_link"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#fc8","line-width":{base:1.2,stops:[[12.5,0],[13,1.5],[14,2.5],[20,11.5]]}}},{id:"highway-link",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",minzoom:13,filter:["all",["!in","brunnel","bridge","tunnel"],["in","class","primary_link","secondary_link","tertiary_link","trunk_link"]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"#fea","line-width":{base:1.2,stops:[[12.5,0],[13,1.5],[14,2.5],[20,11.5]]}}},{id:"highway-minor",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","$type","LineString"],["all",["!=","brunnel","tunnel"],["in","class","minor","service","track"]]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#fff","line-opacity":1,"line-width":{base:1.2,stops:[[13.5,0],[14,2.5],[20,11.5]]}}},{id:"highway-secondary-tertiary",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",filter:["all",["!in","brunnel","bridge","tunnel"],["in","class","secondary","tertiary"]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"#fea","line-width":{base:1.2,stops:[[6.5,0],[8,.5],[20,13]]}}},{id:"highway-primary",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","$type","LineString"],["all",["!in","brunnel","bridge","tunnel"],["in","class","primary"]]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"#fea","line-width":{base:1.2,stops:[[8.5,0],[9,.5],[20,18]]}}},{id:"highway-trunk",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","$type","LineString"],["all",["!in","brunnel","bridge","tunnel"],["in","class","trunk"]]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"#fea","line-width":{base:1.2,stops:[[6.5,0],[7,.5],[20,18]]}}},{id:"highway-motorway",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",minzoom:5,filter:["all",["==","$type","LineString"],["all",["!in","brunnel","bridge","tunnel"],["==","class","motorway"]]],layout:{"line-cap":"round","line-join":"round",visibility:"visible"},paint:{"line-color":"#fc8","line-width":{base:1.2,stops:[[6.5,0],[7,.5],[20,18]]}}},{id:"railway-service",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","$type","LineString"],["all",["==","class","rail"],["has","service"]]],paint:{"line-color":"hsla(0, 0%, 73%, 0.77)","line-width":{base:1.4,stops:[[14,.4],[20,1]]}}},{id:"railway-service-hatching",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","$type","LineString"],["all",["==","class","rail"],["has","service"]]],layout:{visibility:"visible"},paint:{"line-color":"hsla(0, 0%, 73%, 0.68)","line-dasharray":[.2,8],"line-width":{base:1.4,stops:[[14.5,0],[15,2],[20,6]]}}},{id:"railway",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","$type","LineString"],["all",["!has","service"],["!in","brunnel","bridge","tunnel"],["==","class","rail"]]],paint:{"line-color":"#bbb","line-width":{base:1.4,stops:[[14,.4],[15,.75],[20,2]]}}},{id:"railway-hatching",type:"line",metadata:{"mapbox:group":"1444849345966.4436"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","$type","LineString"],["all",["!has","service"],["!in","brunnel","bridge","tunnel"],["==","class","rail"]]],paint:{"line-color":"#bbb","line-dasharray":[.2,8],"line-width":{base:1.4,stops:[[14.5,0],[15,3],[20,8]]}}},{id:"bridge-motorway-link-casing",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","bridge"],["==","class","motorway_link"]],layout:{"line-join":"round"},paint:{"line-color":"#e9ac77","line-opacity":1,"line-width":{base:1.2,stops:[[12,1],[13,3],[14,4],[20,15]]}}},{id:"bridge-link-casing",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","bridge"],["in","class","primary_link","secondary_link","tertiary_link","trunk_link"]],layout:{"line-join":"round"},paint:{"line-color":"#e9ac77","line-opacity":1,"line-width":{base:1.2,stops:[[12,1],[13,3],[14,4],[20,15]]}}},{id:"bridge-secondary-tertiary-casing",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","bridge"],["in","class","secondary","tertiary"]],layout:{"line-join":"round"},paint:{"line-color":"#e9ac77","line-opacity":1,"line-width":{base:1.2,stops:[[8,1.5],[20,28]]}}},{id:"bridge-trunk-primary-casing",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","bridge"],["in","class","primary","trunk"]],layout:{"line-join":"round"},paint:{"line-color":"hsl(28, 76%, 67%)","line-width":{base:1.2,stops:[[5,.4],[6,.6],[7,1.5],[20,26]]}}},{id:"bridge-motorway-casing",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","bridge"],["==","class","motorway"]],layout:{"line-join":"round"},paint:{"line-color":"#e9ac77","line-width":{base:1.2,stops:[[5,.4],[6,.6],[7,1.5],[20,22]]}}},{id:"bridge-path-casing",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","$type","LineString"],["all",["==","brunnel","bridge"],["==","class","path"]]],paint:{"line-color":"#f8f4f0","line-width":{base:1.2,stops:[[15,1.2],[20,18]]}}},{id:"bridge-path",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","$type","LineString"],["all",["==","brunnel","bridge"],["==","class","path"]]],paint:{"line-color":"#cba","line-width":{base:1.2,stops:[[15,1.2],[20,4]]},"line-dasharray":[1.5,.75]}},{id:"bridge-motorway-link",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","bridge"],["==","class","motorway_link"]],layout:{"line-join":"round"},paint:{"line-color":"#fc8","line-width":{base:1.2,stops:[[12.5,0],[13,1.5],[14,2.5],[20,11.5]]}}},{id:"bridge-link",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","bridge"],["in","class","primary_link","secondary_link","tertiary_link","trunk_link"]],layout:{"line-join":"round"},paint:{"line-color":"#fea","line-width":{base:1.2,stops:[[12.5,0],[13,1.5],[14,2.5],[20,11.5]]}}},{id:"bridge-secondary-tertiary",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","bridge"],["in","class","secondary","tertiary"]],layout:{"line-join":"round"},paint:{"line-color":"#fea","line-width":{base:1.2,stops:[[6.5,0],[7,.5],[20,20]]}}},{id:"bridge-trunk-primary",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","bridge"],["in","class","primary","trunk"]],layout:{"line-join":"round"},paint:{"line-color":"#fea","line-width":{base:1.2,stops:[[6.5,0],[7,.5],[20,18]]}}},{id:"bridge-motorway",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","bridge"],["==","class","motorway"]],layout:{"line-join":"round"},paint:{"line-color":"#fc8","line-width":{base:1.2,stops:[[6.5,0],[7,.5],[20,18]]}}},{id:"bridge-railway",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","bridge"],["==","class","rail"]],paint:{"line-color":"#bbb","line-width":{base:1.4,stops:[[14,.4],[15,.75],[20,2]]}}},{id:"bridge-railway-hatching",type:"line",metadata:{"mapbox:group":"1444849334699.1902"},source:"openmaptiles","source-layer":"transportation",filter:["all",["==","brunnel","bridge"],["==","class","rail"]],paint:{"line-color":"#bbb","line-dasharray":[.2,8],"line-width":{base:1.4,stops:[[14.5,0],[15,3],[20,8]]}}},{id:"boundary-land-level-4",type:"line",source:"openmaptiles","source-layer":"boundary",filter:["all",["in","admin_level",4,6,8],["!=","maritime",1]],layout:{"line-join":"round"},paint:{"line-color":"#9e9cab","line-dasharray":[3,1,1,1],"line-width":{base:1.4,stops:[[4,.4],[5,1],[12,3]]}}},{id:"boundary-land-level-2",type:"line",source:"openmaptiles","source-layer":"boundary",filter:["all",["==","admin_level",2],["!=","maritime",1]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"hsl(248, 7%, 66%)","line-width":{base:1,stops:[[0,.6],[4,1.4],[5,2],[12,8]]}}},{id:"boundary-water",type:"line",source:"openmaptiles","source-layer":"boundary",filter:["all",["in","admin_level",2,4],["==","maritime",1]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"rgba(154, 189, 214, 1)","line-width":{base:1,stops:[[0,.6],[4,1.4],[5,2],[12,8]]},"line-opacity":{stops:[[6,.6],[10,1]]}}},{id:"waterway-name",type:"symbol",source:"openmaptiles","source-layer":"waterway",minzoom:13,filter:["all",["==","$type","LineString"],["has","name"],["!has","name:de"]],layout:{"text-font":["Open Sans Italic"],"text-size":14,"text-field":"{name:latin} {name:nonlatin}","text-max-width":5,"text-rotation-alignment":"map","symbol-placement":"line","text-letter-spacing":.2,"symbol-spacing":350},paint:{"text-color":"#74aee9","text-halo-width":1.5,"text-halo-color":"rgba(255,255,255,0.7)"}},{id:"waterway-name-en",type:"symbol",source:"openmaptiles","source-layer":"waterway",minzoom:13,filter:["all",["==","$type","LineString"],["has","name"],["has","name:de"]],layout:{"text-font":["Open Sans Italic"],"text-size":14,"text-field":"{name:de} {name:nonlatin}","text-max-width":5,"text-rotation-alignment":"map","symbol-placement":"line","text-letter-spacing":.2,"symbol-spacing":350},paint:{"text-color":"#74aee9","text-halo-width":1.5,"text-halo-color":"rgba(255,255,255,0.7)"}},{id:"water-name-lakeline",type:"symbol",source:"openmaptiles","source-layer":"water_name",filter:["all",["==","$type","LineString"],["!has","name:de"]],layout:{"text-font":["Open Sans Italic"],"text-size":14,"text-field":"{name:latin} {name:nonlatin}","text-max-width":5,"text-rotation-alignment":"map","symbol-placement":"line","symbol-spacing":350,"text-letter-spacing":.2},paint:{"text-color":"#74aee9","text-halo-width":1.5,"text-halo-color":"rgba(255,255,255,0.7)"}},{id:"water-name-lakeline-en",type:"symbol",source:"openmaptiles","source-layer":"water_name",filter:["all",["==","$type","LineString"],["has","name:de"]],layout:{"text-font":["Open Sans Italic"],"text-size":14,"text-field":"{name:de} {name:nonlatin}","text-max-width":5,"text-rotation-alignment":"map","symbol-placement":"line","symbol-spacing":350,"text-letter-spacing":.2},paint:{"text-color":"#74aee9","text-halo-width":1.5,"text-halo-color":"rgba(255,255,255,0.7)"}},{id:"water-name-ocean",type:"symbol",source:"openmaptiles","source-layer":"water_name",filter:["all",["==","$type","Point"],["==","class","ocean"],["!has","name:de"]],layout:{"text-font":["Open Sans Italic"],"text-size":14,"text-field":"{name:latin}\n{name:nonlatin}","text-max-width":5,"text-rotation-alignment":"map","symbol-placement":"point","symbol-spacing":350,"text-letter-spacing":.2},paint:{"text-color":"#74aee9","text-halo-width":1.5,"text-halo-color":"rgba(255,255,255,0.7)"}},{id:"water-name-ocean-en",type:"symbol",source:"openmaptiles","source-layer":"water_name",filter:["all",["==","$type","Point"],["==","class","ocean"],["has","name:de"]],layout:{"text-font":["Open Sans Italic"],"text-size":14,"text-field":"{name:de}\n{name:nonlatin}","text-max-width":5,"text-rotation-alignment":"map","symbol-placement":"point","symbol-spacing":350,"text-letter-spacing":.2},paint:{"text-color":"#74aee9","text-halo-width":1.5,"text-halo-color":"rgba(255,255,255,0.7)"}},{id:"water-name-other",type:"symbol",source:"openmaptiles","source-layer":"water_name",filter:["all",["==","$type","Point"],["!in","class","ocean"],["!has","name:de"]],layout:{"text-font":["Open Sans Italic"],"text-size":{stops:[[0,10],[6,14]]},"text-field":"{name:latin}\n{name:nonlatin}","text-max-width":5,"text-rotation-alignment":"map","symbol-placement":"point","symbol-spacing":350,"text-letter-spacing":.2,visibility:"visible"},paint:{"text-color":"#74aee9","text-halo-width":1.5,"text-halo-color":"rgba(255,255,255,0.7)"}},{id:"water-name-other-en",type:"symbol",source:"openmaptiles","source-layer":"water_name",filter:["all",["==","$type","Point"],["!in","class","ocean"],["has","name:de"]],layout:{"text-font":["Open Sans Italic"],"text-size":{stops:[[0,10],[6,14]]},"text-field":"{name:de}\n{name:nonlatin}","text-max-width":5,"text-rotation-alignment":"map","symbol-placement":"point","symbol-spacing":350,"text-letter-spacing":.2,visibility:"visible"},paint:{"text-color":"#74aee9","text-halo-width":1.5,"text-halo-color":"rgba(255,255,255,0.7)"}},{id:"poi-level-3",type:"symbol",source:"openmaptiles","source-layer":"poi",minzoom:16,filter:["all",["==","$type","Point"],[">=","rank",25],["!has","name:de"]],layout:{"text-padding":2,"text-font":["Open Sans Semibold"],"text-anchor":"top","icon-image":"{class}_11","text-field":"{name:latin}\n{name:nonlatin}","text-offset":[0,.6],"text-size":12,"text-max-width":9},paint:{"text-halo-blur":.5,"text-color":"#666","text-halo-width":1,"text-halo-color":"#ffffff"}},{id:"poi-level-3-en",type:"symbol",source:"openmaptiles","source-layer":"poi",minzoom:16,filter:["all",["==","$type","Point"],[">=","rank",25],["has","name:de"]],layout:{"text-padding":2,"text-font":["Open Sans Semibold"],"text-anchor":"top","icon-image":"{class}_11","text-field":"{name:de}\n{name:nonlatin}","text-offset":[0,.6],"text-size":12,"text-max-width":9},paint:{"text-halo-blur":.5,"text-color":"#666","text-halo-width":1,"text-halo-color":"#ffffff"}},{id:"poi-level-2",type:"symbol",source:"openmaptiles","source-layer":"poi",minzoom:15,filter:["all",["==","$type","Point"],["all",["<=","rank",24],[">=","rank",15]],["!has","name:de"]],layout:{"text-padding":2,"text-font":["Open Sans Semibold"],"text-anchor":"top","icon-image":"{class}_11","text-field":"{name:latin}\n{name:nonlatin}","text-offset":[0,.6],"text-size":12,"text-max-width":9},paint:{"text-halo-blur":.5,"text-color":"#666","text-halo-width":1,"text-halo-color":"#ffffff"}},{id:"poi-level-2-en",type:"symbol",source:"openmaptiles","source-layer":"poi",minzoom:15,filter:["all",["==","$type","Point"],["all",["<=","rank",24],[">=","rank",15]],["has","name:de"]],layout:{"text-padding":2,"text-font":["Open Sans Semibold"],"text-anchor":"top","icon-image":"{class}_11","text-field":"{name:de}\n{name:nonlatin}","text-offset":[0,.6],"text-size":12,"text-max-width":9},paint:{"text-halo-blur":.5,"text-color":"#666","text-halo-width":1,"text-halo-color":"#ffffff"}},{id:"poi-level-1",type:"symbol",source:"openmaptiles","source-layer":"poi",minzoom:14,filter:["all",["==","$type","Point"],["all",["<=","rank",14],["has","name"]],["!has","name:de"]],layout:{"text-padding":2,"text-font":["Open Sans Semibold"],"text-anchor":"top","icon-image":"{class}_11","text-field":"{name:latin}\n{name:nonlatin}","text-offset":[0,.6],"text-size":12,"text-max-width":9},paint:{"text-halo-blur":.5,"text-color":"#666","text-halo-width":1,"text-halo-color":"#ffffff"}},{id:"poi-level-1-en",type:"symbol",source:"openmaptiles","source-layer":"poi",minzoom:14,filter:["all",["==","$type","Point"],["all",["<=","rank",14],["has","name"]],["has","name:de"]],layout:{"text-padding":2,"text-font":["Open Sans Semibold"],"text-anchor":"top","icon-image":"{class}_11","text-field":"{name:de}\n{name:nonlatin}","text-offset":[0,.6],"text-size":12,"text-max-width":9},paint:{"text-halo-blur":.5,"text-color":"#666","text-halo-width":1,"text-halo-color":"#ffffff"}},{id:"highway-name-path",type:"symbol",source:"openmaptiles","source-layer":"transportation_name",minzoom:15.5,filter:["all",["==","class","path"],["!has","name:de"]],layout:{"text-size":{base:1,stops:[[13,12],[14,13]]},"text-font":["Open Sans Regular"],"text-field":"{name:latin} {name:nonlatin}","symbol-placement":"line","text-rotation-alignment":"map"},paint:{"text-halo-color":"#f8f4f0","text-color":"hsl(30, 23%, 62%)","text-halo-width":.5}},{id:"highway-name-path-en",type:"symbol",source:"openmaptiles","source-layer":"transportation_name",minzoom:15.5,filter:["all",["==","class","path"],["has","name:de"]],layout:{"text-size":{base:1,stops:[[13,12],[14,13]]},"text-font":["Open Sans Regular"],"text-field":"{name:de} {name:nonlatin}","symbol-placement":"line","text-rotation-alignment":"map"},paint:{"text-halo-color":"#f8f4f0","text-color":"hsl(30, 23%, 62%)","text-halo-width":.5}},{id:"highway-name-minor",type:"symbol",source:"openmaptiles","source-layer":"transportation_name",minzoom:15,filter:["all",["==","$type","LineString"],["in","class","minor","service","track"],["!has","name:de"]],layout:{"text-size":{base:1,stops:[[13,12],[14,13]]},"text-font":["Open Sans Regular"],"text-field":"{name:latin} {name:nonlatin}","symbol-placement":"line","text-rotation-alignment":"map"},paint:{"text-halo-blur":.5,"text-color":"#765","text-halo-width":1}},{id:"highway-name-minor-en",type:"symbol",source:"openmaptiles","source-layer":"transportation_name",minzoom:15,filter:["all",["==","$type","LineString"],["in","class","minor","service","track"],["has","name:de"]],layout:{"text-size":{base:1,stops:[[13,12],[14,13]]},"text-font":["Open Sans Regular"],"text-field":"{name:de} {name:nonlatin}","symbol-placement":"line","text-rotation-alignment":"map"},paint:{"text-halo-blur":.5,"text-color":"#765","text-halo-width":1}},{id:"highway-name-major",type:"symbol",source:"openmaptiles","source-layer":"transportation_name",minzoom:12.2,filter:["all",["in","class","primary","secondary","tertiary","trunk"],["!has","name:de"]],layout:{"text-size":{base:1,stops:[[13,12],[14,13]]},"text-font":["Open Sans Regular"],"text-field":"{name:latin} {name:nonlatin}","symbol-placement":"line","text-rotation-alignment":"map"},paint:{"text-halo-blur":.5,"text-color":"#765","text-halo-width":1}},{id:"highway-name-major-en",type:"symbol",source:"openmaptiles","source-layer":"transportation_name",minzoom:12.2,filter:["all",["in","class","primary","secondary","tertiary","trunk"],["has","name:de"]],layout:{"text-size":{base:1,stops:[[13,12],[14,13]]},"text-font":["Open Sans Regular"],"text-field":"{name:de} {name:nonlatin}","symbol-placement":"line","text-rotation-alignment":"map"},paint:{"text-halo-blur":.5,"text-color":"#765","text-halo-width":1}},{id:"highway-shield",type:"symbol",source:"openmaptiles","source-layer":"transportation_name",minzoom:8,filter:["all",["<=","ref_length",6],["==","$type","LineString"],["!in","network","us-interstate","us-highway","us-state"]],layout:{"text-size":10,"icon-image":"road_{ref_length}","icon-rotation-alignment":"viewport","symbol-spacing":200,"text-font":["Open Sans Semibold"],"symbol-placement":{base:1,stops:[[10,"point"],[11,"line"]]},"text-rotation-alignment":"viewport","icon-size":1,"text-field":"{ref}"},paint:{}},{id:"highway-shield-us-interstate",type:"symbol",source:"openmaptiles","source-layer":"transportation_name",minzoom:7,filter:["all",["<=","ref_length",6],["==","$type","LineString"],["in","network","us-interstate"]],layout:{"text-size":10,"icon-image":"{network}_{ref_length}","icon-rotation-alignment":"viewport","symbol-spacing":200,"text-font":["Open Sans Semibold"],"symbol-placement":{base:1,stops:[[7,"point"],[7,"line"],[8,"line"]]},"text-rotation-alignment":"viewport","icon-size":1,"text-field":"{ref}"},paint:{"text-color":"rgba(0, 0, 0, 1)"}},{id:"highway-shield-us-other",type:"symbol",source:"openmaptiles","source-layer":"transportation_name",minzoom:9,filter:["all",["<=","ref_length",6],["==","$type","LineString"],["in","network","us-highway","us-state"]],layout:{"text-size":10,"icon-image":"{network}_{ref_length}","icon-rotation-alignment":"viewport","symbol-spacing":200,"text-font":["Open Sans Semibold"],"symbol-placement":{base:1,stops:[[10,"point"],[11,"line"]]},"text-rotation-alignment":"viewport","icon-size":1,"text-field":"{ref}"},paint:{"text-color":"rgba(0, 0, 0, 1)"}},{id:"place-other",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["!in","class","city","town","village"],["!has","name:de"]],layout:{"text-letter-spacing":.1,"text-size":{base:1.2,stops:[[12,10],[15,14]]},"text-font":["Open Sans Bold"],"text-field":"{name:latin}\n{name:nonlatin}","text-transform":"uppercase","text-max-width":9},paint:{"text-color":"#633","text-halo-width":1.2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-other-en",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["!in","class","city","town","village"],["has","name:de"]],layout:{"text-letter-spacing":.1,"text-size":{base:1.2,stops:[[12,10],[15,14]]},"text-font":["Open Sans Bold"],"text-field":"{name:de}\n{name:nonlatin}","text-transform":"uppercase","text-max-width":9},paint:{"text-color":"#633","text-halo-width":1.2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-village",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["==","class","village"],["!has","name:de"]],layout:{"text-font":["Open Sans Regular"],"text-size":{base:1.2,stops:[[10,12],[15,22]]},"text-field":"{name:latin}\n{name:nonlatin}","text-max-width":8},paint:{"text-color":"#333","text-halo-width":1.2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-village-en",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["==","class","village"],["has","name:de"]],layout:{"text-font":["Open Sans Regular"],"text-size":{base:1.2,stops:[[10,12],[15,22]]},"text-field":"{name:de}\n{name:nonlatin}","text-max-width":8},paint:{"text-color":"#333","text-halo-width":1.2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-town",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["==","class","town"],["!has","name:de"]],layout:{"text-font":["Open Sans Regular"],"text-size":{base:1.2,stops:[[10,14],[15,24]]},"text-field":"{name:latin}\n{name:nonlatin}","text-max-width":8},paint:{"text-color":"#333","text-halo-width":1.2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-town-en",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["==","class","town"],["has","name:de"]],layout:{"text-font":["Open Sans Regular"],"text-size":{base:1.2,stops:[[10,14],[15,24]]},"text-field":"{name:de}\n{name:nonlatin}","text-max-width":8},paint:{"text-color":"#333","text-halo-width":1.2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-city",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["!=","capital",2],["==","class","city"],["!has","name:de"]],layout:{"text-font":["Open Sans Semibold"],"text-size":{base:1.2,stops:[[7,14],[11,24]]},"text-field":"{name:latin}\n{name:nonlatin}","text-max-width":8},paint:{"text-color":"#333","text-halo-width":1.2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-city-en",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["!=","capital",2],["==","class","city"],["has","name:de"]],layout:{"text-font":["Open Sans Semibold"],"text-size":{base:1.2,stops:[[7,14],[11,24]]},"text-field":"{name:de}\n{name:nonlatin}","text-max-width":8},paint:{"text-color":"#333","text-halo-width":1.2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-city-capital",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["==","capital",2],["==","class","city"],["!has","name:de"]],layout:{"text-font":["Open Sans Semibold"],"text-size":{base:1.2,stops:[[7,14],[11,24]]},"text-field":"{name:latin}\n{name:nonlatin}","text-max-width":8,"icon-image":"star_11","text-offset":[.4,0],"icon-size":.8,"text-anchor":"left"},paint:{"text-color":"#333","text-halo-width":1.2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-city-capital-en",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["==","capital",2],["==","class","city"],["has","name:de"]],layout:{"text-font":["Open Sans Semibold"],"text-size":{base:1.2,stops:[[7,14],[11,24]]},"text-field":"{name:de}\n{name:nonlatin}","text-max-width":8,"icon-image":"star_11","text-offset":[.4,0],"icon-size":.8,"text-anchor":"left"},paint:{"text-color":"#333","text-halo-width":1.2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-country-3",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["==","class","country"],[">=","rank",3],["!has","name:de"]],layout:{"text-font":["Open Sans Bold"],"text-field":"{name:latin}\n{name:nonlatin}","text-size":{stops:[[3,11],[7,17]]},"text-transform":"uppercase","text-max-width":6.25},paint:{"text-halo-blur":1,"text-color":"#334","text-halo-width":2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-country-3-en",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["==","class","country"],[">=","rank",3],["has","name:de"]],layout:{"text-font":["Open Sans Bold"],"text-field":"{name:de}\n{name:nonlatin}","text-size":{stops:[[3,11],[7,17]]},"text-transform":"uppercase","text-max-width":6.25},paint:{"text-halo-blur":1,"text-color":"#334","text-halo-width":2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-country-2",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["==","class","country"],["==","rank",2],["!has","name:de"]],layout:{"text-font":["Open Sans Bold"],"text-field":"{name:latin}\n{name:nonlatin}","text-size":{stops:[[2,11],[5,17]]},"text-transform":"uppercase","text-max-width":6.25},paint:{"text-halo-blur":1,"text-color":"#334","text-halo-width":2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-country-2-en",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["==","class","country"],["==","rank",2],["has","name:de"]],layout:{"text-font":["Open Sans Bold"],"text-field":"{name:de}\n{name:nonlatin}","text-size":{stops:[[2,11],[5,17]]},"text-transform":"uppercase","text-max-width":6.25},paint:{"text-halo-blur":1,"text-color":"#334","text-halo-width":2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-country-1",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["==","class","country"],["==","rank",1],["!has","name:de"]],layout:{"text-font":["Open Sans Bold"],"text-field":"{name:latin}\n{name:nonlatin}","text-size":{stops:[[1,11],[4,17]]},"text-transform":"uppercase","text-max-width":6.25},paint:{"text-halo-blur":1,"text-color":"#334","text-halo-width":2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-country-1-en",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",filter:["all",["==","class","country"],["==","rank",1],["has","name:de"]],layout:{"text-font":["Open Sans Bold"],"text-field":"{name:de}\n{name:nonlatin}","text-size":{stops:[[1,11],[4,17]]},"text-transform":"uppercase","text-max-width":6.25},paint:{"text-halo-blur":1,"text-color":"#334","text-halo-width":2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-continent",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",maxzoom:1,filter:["all",["==","class","continent"],["!has","name:de"]],layout:{"text-font":["Open Sans Bold"],"text-field":"{name:latin}\n{name:nonlatin}","text-size":14,"text-max-width":6.25,"text-transform":"uppercase"},paint:{"text-halo-blur":1,"text-color":"#334","text-halo-width":2,"text-halo-color":"rgba(255,255,255,0.8)"}},{id:"place-continent-en",type:"symbol",metadata:{"mapbox:group":"1444849242106.713"},source:"openmaptiles","source-layer":"place",maxzoom:1,filter:["all",["==","class","continent"],["has","name:de"]],layout:{"text-font":["Open Sans Bold"],"text-field":"{name:de}\n{name:nonlatin}","text-size":14,"text-max-width":6.25,"text-transform":"uppercase"},paint:{"text-halo-blur":1,"text-color":"#334","text-halo-width":2,"text-halo-color":"rgba(255,255,255,0.8)"}}]};var C=o(74848);function $(e){var t=function(){return e.json.filter((function(t){return t.item===e.section}))};return t()[0].description?(0,C.jsxs)(C.Fragment,{children:[(0,C.jsx)(p.A,{variant:"h6",marginBottom:3,children:e.title}),(0,C.jsx)(p.A,{variant:"body1",dangerouslySetInnerHTML:{__html:t()[0].description}})]}):(0,C.jsx)(C.Fragment,{})}const F=$;try{$.displayName="DemoDescriptions",$.__docgenInfo={description:"",displayName:"DemoDescriptions",props:{section:{defaultValue:null,description:"",name:"section",required:!0,type:{name:"string"}},json:{defaultValue:null,description:"",name:"json",required:!0,type:{name:"DemoDescriptionItem[]"}},title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/ui_components/DemoDescriptions.tsx#DemoDescriptions"]={docgenInfo:$.__docgenInfo,name:"DemoDescriptions",path:"src/ui_components/DemoDescriptions.tsx#DemoDescriptions"})}catch(e){}const D=JSON.parse('[{"item":"mbtiles","description":"In this example, an MBtile file containing the countries of the world is loaded to the map through the useAddProtocol hook. The protocol manager registers the contents of the file as a source. We then add in the layer list a Vector tile layer that uses that source. <br> See source file: <a href=\'https://github.com/mapcomponents/react-map-components-maplibre/blob/main/public/mbtiles/countries.mbtiles\' target=”_blank”> countries.mbtiles </a>"},{"item":"csv","description":"<p>The CSVProtocolHandler enables us to load a layer from a table containing the coordinates of one or more points. The table must have a \'latitude\' and a \'longitude\' column. Column names like \'lat\' or \'long\' are automatically recognized by the hook. Other names, as well as a delimiter other than the comma, can be specified in the options.This encoded options object can be added after a \'?\' sign at the end of the url. <br> The url is expected to have the following Format: <br> See source file: <a href=\'https://github.com/mapcomponents/react-map-components-maplibre/blob/main/public/csv/restaurants.csv\' target=”_blank”> restaurants.csv </a></p> <center> <h4>[protocol]://[filePath]?[encodedOptions]</h6> </center> Example: <i> csv://csv/restaurants.csv </i><br> Example of an options object: <i> csv://csv/gemany_100_postcodes.csv?latfield=Axe-y&lonfield=Axe-x&delimiter=%3A </i><br>  Where the enconded parameters represents the following options object:<br> {<br>latfield: \'Axe-y\', <br>lonfield: \'Axe-x\', <br>delimiter: \':\'<br>} "},{"item":"osm","description":"<p> The OSMProtocolHandler will transform OSM type files into a geojson object and register it as a source. The handler accepts an encoded options object in the source url. <br> See source file: <a href=\'https://github.com/mapcomponents/react-map-components-maplibre/blob/main/public/osm/palma.osm\' target=”_blank”> palma.osm </a> <br> The url is expected to have the following Format: <br> </p> <center> <h4>[protocol]://[filePath]?[encodedOptions</h6> </center> Example: <i> osm://osm/palma.osm?completeFeature=true&allFeatures=false&renderTagged=false&excludeWay=false&suppressWay=false </i> <br> Where the enconded parameters represents the following options object: <br> { <br> completeFeature: true, <br> allFeatures: false,<br> renderTagged: false, <br> excludeWay: false, <br> suppressWay: false <br> }"},{"item":"gpx","description":"<p> GPX files can be processed with the XMLProtocolHandler. This will transform the files into a geojson object and register it as a source. <br> See source file: <a href=\'https://github.com/mapcomponents/react-map-components-maplibre/blob/main/public/gpx/santiago.gpx\' target=”_blank”> santiago.gpx </a> <br> The url is expected to have the following Format: <br> </p> <center> <h4>[protocol]://[filePath]</h6> </center> Example: <i> xml://gpx/santiago.gpx </i>"},{"item":"kml","description":"<p> KML files can be processed with the XMLProtocolHandler. This will transform the files into a geojson object and register it as a source. <br> See source file: <a href=\'https://github.com/mapcomponents/react-map-components-maplibre/blob/main/public/kml/cape_may.kml\' target=”_blank”> cape_may.kml </a> <br> The url is expected to have the following Format: <br> </p> <center> <h4>[protocol]://[filePath]</h6> </center> Example: <i> xml://kml/cape_may.gpx </i>"},{"item":"tcx","description":"<p> TCX files can be processed with the XMLProtocolHandler. This will transform the files into a geojson object and register it as a source. <br> See source file: <a href=\'https://github.com/mapcomponents/react-map-components-maplibre/blob/main/public/tcx/example.tcx\' target=”_blank”> example.tcx </a> <br> The url is expected to have the following Format: <br> </p> <center> <h4>[protocol]://[filePath]</h6> </center> Example: <i> xml://tcx/example.tcx </i>"},{"item":"topojson","description":"<p> In this example, a topojson file is loaded with help of The TopojsonProtocolHandler. The handler transforms the topojson into a geojson object and keep register of the origin topojson object in the features properties of the new geojson. <br> See source file: <a href=\'https://github.com/mapcomponents/react-map-components-maplibre/blob/main/public/topojson/usa.topojson\' target=”_blank”> usa.topojson </a></p> <br> The url is expected to have the following Format: <br>  </p> <center> <h4>[protocol]://[filePath]</h6> </center>  "}]');var R=o(67684),U=o(24856),V=o(90175);function W(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var a,n,r,i,l=[],s=!0,p=!1;try{if(r=(o=o.call(e)).next,0===t){if(Object(o)!==o)return;s=!1}else for(;!(s=(a=r.call(o)).done)&&(l.push(a.value),l.length!==t);s=!0);}catch(e){p=!0,n=e}finally{try{if(!s&&null!=o.return&&(i=o.return(),Object(i)!==i))return}finally{if(p)throw n}}return l}}(e,t)||N(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function N(e,t){if(e){if("string"==typeof e)return X(e,t);var o=Object.prototype.toString.call(e).slice(8,-1);return"Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o?Array.from(e):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?X(e,t):void 0}}function X(e,t){(null==t||t>e.length)&&(t=e.length);for(var o=0,a=new Array(t);o<t;o++)a[o]=e[o];return a}const G={title:"hooks/useAddProtocol",component:A.A,argTypes:{},decorators:O.A};var J=function(){var e=(0,a.useContext)(E.A);return(0,a.useEffect)((function(){e.updateStyle(M)}),[]),(0,C.jsx)("div",{style:{display:"none"},children:(0,C.jsx)(I.A,{children:(0,C.jsx)(H.A,{layers:e.layers,setLayers:e.setLayers,insertBeforeLayer:"useAddProtocolLayer",fitBoundsOptions:{padding:{top:50,bottom:50,left:25,right:25}}})})})};J.displayName="BackgroundLayers";var K=function(){var e=(0,_.A)({mapId:void 0});return(0,A.A)({protocol:"mbtiles",handler:v}),(0,a.useEffect)((function(){var t;e.map&&(null===(t=e.map)||void 0===t||t.setZoom(0))}),[e.map]),(0,C.jsxs)(C.Fragment,{children:[(0,C.jsx)(R.A,{mapId:"map_1",url:"mbtiles://mbtiles/countries.mbtiles/{z}/{x}/{y}",layers:[{id:"countries",type:"fill","source-layer":"countries",layout:{},paint:{"fill-color":"#f9a5f5","fill-opacity":.5}}],insertBeforeLayer:"waterway-name",sourceOptions:{type:"vector",minzoom:0,maxzoom:1}}),(0,C.jsx)(J,{})]})}.bind({});K.parameters={name:"MBTiles"},K.args={};var q=function(){var e=(0,_.A)({mapId:void 0});return(0,A.A)({protocol:"csv",handler:k.V}),(0,a.useEffect)((function(){var t,o,a;null!==(t=e.map)&&void 0!==t&&t.getSource("csv-source")||null===(a=e.map)||void 0===a||a.addSource("csv-source",{type:"geojson",data:"csv://csv/restaurants.csv"}),null===(o=e.map)||void 0===o||o.jumpTo({center:[-74.914516,38.935759],zoom:13})}),[e.map]),(0,C.jsxs)(C.Fragment,{children:[(0,C.jsx)(U.A,{layerId:"UseAddProtocolLayer",options:{type:"circle",source:"csv-source",paint:{"circle-color":"#009EE0","circle-stroke-color":"#F0f0f0","circle-stroke-width":2,"circle-radius":18}},insertBeforeLayer:"waterway-name"}),(0,C.jsx)(J,{})]})}.bind({});q.parameters={},q.args={};var Y=function(){var e=(0,_.A)({mapId:void 0});return(0,A.A)({protocol:"csv",handler:k.V}),(0,a.useEffect)((function(){var t,o,a;null!==(t=e.map)&&void 0!==t&&t.getSource("csv-source")||(null===(a=e.map)||void 0===a||a.addSource("csv-source",{type:"geojson",data:"csv://csv/gemany_100_postcodes.csv".concat("?latfield=Axe-y&lonfield=Axe-x&delimiter=:")}));null===(o=e.map)||void 0===o||o.jumpTo({center:[10.147049,50.871231],zoom:6,speed:2})}),[e.map]),(0,C.jsxs)(C.Fragment,{children:[(0,C.jsx)(U.A,{layerId:"UseAddProtocolLayer",options:{type:"circle",source:"csv-source",paint:{"circle-color":"#009EE0","circle-stroke-color":"#F0f0f0","circle-stroke-width":2,"circle-radius":18}},insertBeforeLayer:"waterway-name"}),(0,C.jsx)(J,{})]})}.bind({});Y.parameters={},Y.args={};var Z=function(){var e=(0,_.A)({mapId:void 0});return(0,A.A)({protocol:"osm",handler:S.U}),(0,V.A)({sourceId:"osm-source",source:{type:"geojson",data:"osm://osm/palma.osm?completeFeature=true&allFeatures=false&renderTagged=false&excludeWay=false&suppressWay=false"}}),(0,a.useEffect)((function(){var t,o;null===(t=e.map)||void 0===t||t.getSource("osm-source"),null===(o=e.map)||void 0===o||o.jumpTo({center:[2.651811,39.571309],zoom:16.5})}),[e.map]),(0,C.jsxs)(C.Fragment,{children:[(0,C.jsx)(U.A,{layerId:"UseAddProtocolLayer",options:{type:"line",source:"osm-source",paint:{"line-color":"#9a00ff"}},insertBeforeLayer:"waterway-name"}),(0,C.jsx)(J,{})]})}.bind({});Z.parameters={},Z.args={};var Q=function(){var e=(0,_.A)({mapId:void 0});return(0,A.A)({protocol:"gpx",handler:L.O}),(0,a.useEffect)((function(){var t,o,a;null!==(t=e.map)&&void 0!==t&&t.getSource("gpx-source")||null===(a=e.map)||void 0===a||a.addSource("gpx-source",{type:"geojson",data:"gpx://gpx/santiago.gpx"}),null===(o=e.map)||void 0===o||o.jumpTo({center:[-5.100251,42.887371],zoom:7})}),[e.map]),(0,C.jsxs)(C.Fragment,{children:[(0,C.jsx)(U.A,{layerId:"UseAddProtocolLayer",options:{type:"circle",source:"gpx-source",paint:{"circle-color":"#45ff33","circle-stroke-color":"#259913","circle-stroke-width":1,"circle-radius":2}},insertBeforeLayer:"waterway-name"}),(0,C.jsx)(J,{})]})}.bind({});Q.parameters={},Q.args={};var ee=function(){var e=(0,_.A)({mapId:void 0});return(0,A.A)({protocol:"kml",handler:L.O}),(0,a.useEffect)((function(){var t,o,a;null!==(t=e.map)&&void 0!==t&&t.getSource("kml-source")||null===(a=e.map)||void 0===a||a.addSource("kml-source",{type:"geojson",data:"kml://kml/cape_may.kml"}),null===(o=e.map)||void 0===o||o.jumpTo({center:[-74.82832,39.093526],zoom:9})}),[e.map]),(0,C.jsxs)(C.Fragment,{children:[(0,C.jsx)(U.A,{layerId:"UseAddProtocolLayer",options:{type:"circle",source:"kml-source",paint:{"circle-color":"#ff4533","circle-stroke-color":"#992513","circle-stroke-width":1,"circle-radius":2}},insertBeforeLayer:"waterway-name"}),(0,C.jsx)(J,{})]})}.bind({});ee.parameters={},ee.args={protocol:"kml",handler:L.O,sourceId:"fromKML-Source",filePath:"kml/cape_may.kml",flyTo:{center:[-74.82832,39.093526],zoom:9,speed:2}};var te=function(){var e=(0,_.A)({mapId:void 0});return(0,A.A)({protocol:"tcx",handler:L.O}),(0,a.useEffect)((function(){var t,o,a;null!==(t=e.map)&&void 0!==t&&t.getSource("kml-source")||null===(a=e.map)||void 0===a||a.addSource("tcx-source",{type:"geojson",data:"tcx://tcx/example.tcx"}),null===(o=e.map)||void 0===o||o.jumpTo({center:[32.711545,34.844962],zoom:9})}),[e.map]),(0,C.jsxs)(C.Fragment,{children:[(0,C.jsx)(U.A,{layerId:"UseAddProtocolLayer",options:{type:"circle",source:"tcx-source",paint:{"circle-color":"#ff45fa","circle-stroke-color":"#992578","circle-stroke-width":1,"circle-radius":2}},insertBeforeLayer:"waterway-name"}),(0,C.jsx)(J,{})]})}.bind({});te.parameters={},te.args={};var oe=function(){var e=(0,_.A)({mapId:void 0});return(0,A.A)({protocol:"topojson",handler:j.F}),(0,a.useEffect)((function(){var t,o,a;null!==(t=e.map)&&void 0!==t&&t.getSource("topojson-source")||null===(a=e.map)||void 0===a||a.addSource("topojson-source",{type:"geojson",data:"topojson://topojson/usa.topojson"}),null===(o=e.map)||void 0===o||o.jumpTo({center:[-99.110122,39.827183],zoom:4})}),[e.map]),(0,C.jsxs)(C.Fragment,{children:[(0,C.jsx)(U.A,{layerId:"UseAddProtocolLayer",options:{type:"line",source:"topojson-source",paint:{"line-color":["match",["get","fromObject"],"land","#111111","states","#009EE0","counties","#747577","white"],"line-width":["match",["get","fromObject"],"land",3,"states",2,"counties",1,1]}},insertBeforeLayer:"waterway-name"}),(0,C.jsx)(J,{})]})}.bind({});oe.parameters={},oe.args={};var ae={mbtiles:{protocol:"mbtiles",handler:v,sourceID:"fromMBTile-source",filePath:"mbtiles/countries.mbtiles",type:"fill",layers:[{id:"countries",type:"fill","source-layer":"countries",layout:{},paint:{"fill-color":"#f9a5f5","fill-opacity":.5}}],insertBeforeLayer:"waterway-name",sourceOptions:{type:"vector",minzoom:0,maxzoom:1},flyTo:{center:[10.147049,50.871231],zoom:2,speed:2}},csv:{protocol:"csv",handler:k.V,sourceId:"fromCSV-Source",filePath:"csv/restaurants.csv",type:"circle",paint:{"circle-color":"#009EE0","circle-stroke-color":"#F0f0f0","circle-stroke-width":2,"circle-radius":18},flyTo:{center:[-74.914516,38.935759],zoom:13,speed:2}},csvWithOptions:{protocol:"csv",handler:k.V,sourceId:"fromCSV-options-Source",filePath:"csv/gemany_100_postcodes.csv",options:{latfield:"Axe-y",lonfield:"Axe-x",delimiter:":"},type:"circle",paint:{"circle-color":"#009EE0","circle-radius":10},flyTo:{center:[10.147049,50.871231],zoom:6,speed:2}},osm:{protocol:"osm",handler:S.U,sourceId:"fromOSM-Source",filePath:"osm/palma.osm",options:{completeFeature:!0,allFeatures:!1,renderTagged:!1,excludeWay:!1,suppressWay:!1},flyTo:{center:[2.651811,39.571309],zoom:15.5,speed:4}},gpx:{protocol:"gpx",handler:L.O,sourceId:"fromGPX-Source",filePath:"gpx/santiago.gpx",flyTo:{center:[-5.100251,42.887371],zoom:7,speed:3}},kml:{protocol:"kml",handler:L.O,sourceId:"fromKML-Source",filePath:"kml/cape_may.kml",flyTo:{center:[-74.82832,39.093526],zoom:9,speed:2}},tcx:{protocol:"tcx",handler:L.O,sourceId:"fromTCX-Source",filePath:"tcx/example.tcx",flyTo:{center:[32.711545,34.844962],zoom:9,speed:3}},topojson:{protocol:"topojson",handler:j.F,sourceId:"fromTopoJson-Source",filePath:"topojson/usa.topojson",paint:{"line-color":["match",["get","fromObject"],"land","#111111","states","#009EE0","counties","#747577","white"],"line-width":["match",["get","fromObject"],"land",3,"states",2,"counties",1,1]},flyTo:{center:[-99.110122,39.827183],zoom:4,speed:2}}},ne=function(){var e=(0,_.A)({mapId:void 0}),t=W((0,a.useState)(!0),2),o=t[0],c=t[1],u=(0,a.useContext)(E.A),m=W((0,a.useState)("csv"),2),d=m[0],y=m[1],f=W(a.useState(null),2),h=f[0],b=f[1],x=Boolean(h),g=ae[d],w="?"+new URLSearchParams(g.options).toString();return(0,A.A)({protocol:g.protocol,handler:g.handler}),(0,a.useEffect)((function(){u.updateStyle(M),u.setLayers(["mbtiles"===g.protocol?{type:"vt",name:"useAddProtocolLayer",config:{layerId:"useAddProtocolLayer",url:g.protocol+"://"+g.filePath+"/{z}/{x}/{y}",layers:g.layers,insertBeforeLayer:g.insertBeforeLayer,sourceOptions:g.sourceOptions}}:{type:"geojson",name:"useAddProtocolLayer",config:{layerId:"useAddProtocolLayer",type:g.type||"line",options:{source:g.sourceId},paint:g.paint}}])}),[d]),(0,a.useEffect)((function(){var t,o,a;null!==(t=e.map)&&void 0!==t&&t.getSource(g.sourceId)||"mbtiles"===g.protocol||null===(o=e.map)||void 0===o||o.addSource(g.sourceId,{type:"geojson",data:g.protocol+"://"+g.filePath+w}),g.flyTo&&(null===(a=e.map)||void 0===a||a.flyTo(g.flyTo))}),[e.map,d]),(0,C.jsxs)(C.Fragment,{children:[(0,C.jsx)(z.A,{buttons:(0,C.jsxs)(C.Fragment,{children:[(0,C.jsx)(n.A,{variant:o?"contained":"outlined",onClick:function(){return c(!o)},sx:{marginRight:{xs:"0px",sm:"10px"}},children:"Sidebar"}),(0,C.jsx)(n.A,{id:"basic-button",variant:"contained","aria-controls":x?"basic-menu":void 0,"aria-haspopup":"true","aria-expanded":x?"true":void 0,onClick:function(e){b(e.currentTarget)},children:"Example Configs"}),(0,C.jsx)(r.A,{id:"basic-menu",anchorEl:h,open:x,onClose:function(){return b(null)},MenuListProps:{"aria-labelledby":"basic-button"},children:Object.keys(ae).map((function(e){return(0,C.jsx)(i.A,{onClick:function(){return y(e)},selected:e===d,children:e},e)}))})]})}),(0,C.jsxs)(P.A,{open:o,setOpen:c,name:g.protocol.toUpperCase()+" demo",children:[(0,C.jsx)(l.A,{title:"add a new"+g.protocol+" to the map",children:(0,C.jsx)(T.A,{onComplete:function(e){return u.setLayers((function(t){return[].concat(function(e){if(Array.isArray(e))return X(e)}(o=t)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(o)||N(o)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),[e]);var o}))},layerTypes:[g.protocol]})}),(0,C.jsxs)(s.A,{sx:{height:"35%"},children:[(0,C.jsx)(p.A,{variant:"h6",children:"Layers"}),(0,C.jsx)(I.A,{children:(0,C.jsx)(H.A,{layers:u.layers,setLayers:u.setLayers,insertBeforeLayer:"useAddProtocolLayer",fitBoundsOptions:{padding:{top:50,bottom:50,left:25,right:25}}})})]}),(0,C.jsx)(F,{json:D,section:g.protocol,title:"About this demo: "})]})]})}.bind({});K.parameters={...K.parameters,docs:{...K.parameters?.docs,source:{originalSource:"() => {\n  const mapHook = useMap({\n    mapId: undefined\n  });\n  useAddProtocol({\n    protocol: 'mbtiles',\n    handler: mbTilesProtocolHandler\n  });\n  useEffect(() => {\n    if (!mapHook.map) return;\n    mapHook.map?.setZoom(0);\n  }, [mapHook.map]);\n  return <>\n            <MlVectorTileLayer mapId={'map_1'} url={'mbtiles://mbtiles/countries.mbtiles/{z}/{x}/{y}'} layers={(([{\n      id: 'countries',\n      type: 'fill',\n      'source-layer': 'countries',\n      layout: {},\n      paint: {\n        'fill-color': '#f9a5f5',\n        'fill-opacity': 0.5\n      }\n    }] as unknown) as LayerSpecification[])} insertBeforeLayer={'waterway-name'} sourceOptions={{\n      type: 'vector',\n      minzoom: 0,\n      maxzoom: 1\n    }} />\n\n            <BackgroundLayers />\n        </>;\n}",...K.parameters?.docs?.source}}},q.parameters={...q.parameters,docs:{...q.parameters?.docs,source:{originalSource:"() => {\n  const mapHook = useMap({\n    mapId: undefined\n  });\n\n  //  An optional encoded options object can be added after a '?' sign at the end of the url.\n  //  Handlers that support options are:\n  // -CSV/TSV Handler Options: https://github.com/mapbox/csv2geojson/blob/gh-pages/README.md\n\n  useAddProtocol({\n    protocol: 'csv',\n    handler: CSVProtocolHandler\n  });\n  useEffect(() => {\n    if (!mapHook.map?.getSource('csv-source')) {\n      mapHook.map?.addSource('csv-source', {\n        type: 'geojson',\n        data: `csv://csv/restaurants.csv`\n      });\n    }\n    mapHook.map?.jumpTo(({\n      center: [-74.914516, 38.935759],\n      zoom: 13\n    } as JumpToOptions));\n  }, [mapHook.map]);\n  return <>\n            <MlLayer layerId={'UseAddProtocolLayer'} options={({\n      type: 'circle',\n      source: 'csv-source',\n      paint: {\n        'circle-color': '#009EE0',\n        'circle-stroke-color': '#F0f0f0',\n        'circle-stroke-width': 2,\n        'circle-radius': 18\n      }\n    } as useLayerProps['options'])} insertBeforeLayer={'waterway-name'} />\n\n            <BackgroundLayers />\n        </>;\n}",...q.parameters?.docs?.source}}},Y.parameters={...Y.parameters,docs:{...Y.parameters?.docs,source:{originalSource:"() => {\n  const mapHook = useMap({\n    mapId: undefined\n  });\n\n  //  An optional encoded options object can be added after a '?' sign at the end of the url.\n  //  Handlers that support options are:\n  // -CSV/TSV Handler Options: https://github.com/mapbox/csv2geojson/blob/gh-pages/README.md\n\n  useAddProtocol({\n    protocol: 'csv',\n    handler: CSVProtocolHandler\n  });\n  useEffect(() => {\n    if (!mapHook.map?.getSource('csv-source')) {\n      const options = '?latfield=Axe-y&lonfield=Axe-x&delimiter=:';\n      mapHook.map?.addSource('csv-source', {\n        type: 'geojson',\n        data: `csv://csv/gemany_100_postcodes.csv${options}`\n      });\n    }\n    mapHook.map?.jumpTo(({\n      center: [10.147049, 50.871231],\n      zoom: 6,\n      speed: 2\n    } as JumpToOptions));\n  }, [mapHook.map]);\n  return <>\n            <MlLayer layerId={'UseAddProtocolLayer'} options={({\n      type: 'circle',\n      source: 'csv-source',\n      paint: {\n        'circle-color': '#009EE0',\n        'circle-stroke-color': '#F0f0f0',\n        'circle-stroke-width': 2,\n        'circle-radius': 18\n      }\n    } as useLayerProps['options'])} insertBeforeLayer={'waterway-name'} />\n\n            <BackgroundLayers />\n        </>;\n}",...Y.parameters?.docs?.source}}},Z.parameters={...Z.parameters,docs:{...Z.parameters?.docs,source:{originalSource:"() => {\n  const mapHook = useMap({\n    mapId: undefined\n  });\n\n  //  An optional encoded options object can be added after a '?' sign at the end of the url.\n  //  Handlers that support options are:\n  // -OSM Handler Options: https://github.com/tibetty/osm2geojson-lite#osm2geojsonosm-opts\n\n  useAddProtocol({\n    protocol: 'osm',\n    handler: OSMProtocolHandler\n  });\n  useSource({\n    sourceId: 'osm-source',\n    source: {\n      type: 'geojson',\n      data: `osm://osm/palma.osm?completeFeature=true&allFeatures=false&renderTagged=false&excludeWay=false&suppressWay=false`\n    }\n  });\n  useEffect(() => {\n    if (!mapHook.map?.getSource('osm-source')) {\n      //mapHook.map?.addSource('osm-source', {\n      //\ttype: 'geojson',\n      //\tdata: `osm://osm/palma.osm${options}`,\n      //});\n    }\n    mapHook.map?.jumpTo(({\n      center: [2.651811, 39.571309],\n      zoom: 16.5\n    } as JumpToOptions));\n  }, [mapHook.map]);\n  return <>\n            <MlLayer layerId={'UseAddProtocolLayer'} options={({\n      type: 'line',\n      source: 'osm-source',\n      paint: {\n        'line-color': '#9a00ff'\n      }\n    } as useLayerProps['options'])} insertBeforeLayer={'waterway-name'} />\n\n            <BackgroundLayers />\n        </>;\n}",...Z.parameters?.docs?.source}}},Q.parameters={...Q.parameters,docs:{...Q.parameters?.docs,source:{originalSource:"() => {\n  const mapHook = useMap({\n    mapId: undefined\n  });\n  useAddProtocol({\n    protocol: 'gpx',\n    handler: XMLProtocolHandler\n  });\n  useEffect(() => {\n    if (!mapHook.map?.getSource('gpx-source')) {\n      mapHook.map?.addSource('gpx-source', {\n        type: 'geojson',\n        data: `gpx://gpx/santiago.gpx`\n      });\n    }\n    mapHook.map?.jumpTo(({\n      center: [-5.100251, 42.887371],\n      zoom: 7\n    } as JumpToOptions));\n  }, [mapHook.map]);\n  return <>\n            <MlLayer layerId={'UseAddProtocolLayer'} options={({\n      type: 'circle',\n      source: 'gpx-source',\n      paint: {\n        'circle-color': '#45ff33',\n        'circle-stroke-color': '#259913',\n        'circle-stroke-width': 1,\n        'circle-radius': 2\n      }\n    } as useLayerProps['options'])} insertBeforeLayer={'waterway-name'} />\n\n            <BackgroundLayers />\n        </>;\n}",...Q.parameters?.docs?.source}}},ee.parameters={...ee.parameters,docs:{...ee.parameters?.docs,source:{originalSource:"() => {\n  const mapHook = useMap({\n    mapId: undefined\n  });\n  useAddProtocol({\n    protocol: 'kml',\n    handler: XMLProtocolHandler\n  });\n  useEffect(() => {\n    if (!mapHook.map?.getSource('kml-source')) {\n      mapHook.map?.addSource('kml-source', {\n        type: 'geojson',\n        data: `kml://kml/cape_may.kml`\n      });\n    }\n    mapHook.map?.jumpTo(({\n      center: [-74.82832, 39.093526],\n      zoom: 9\n    } as JumpToOptions));\n  }, [mapHook.map]);\n  return <>\n            <MlLayer layerId={'UseAddProtocolLayer'} options={({\n      type: 'circle',\n      source: 'kml-source',\n      paint: {\n        'circle-color': '#ff4533',\n        'circle-stroke-color': '#992513',\n        'circle-stroke-width': 1,\n        'circle-radius': 2\n      }\n    } as useLayerProps['options'])} insertBeforeLayer={'waterway-name'} />\n\n            <BackgroundLayers />\n        </>;\n}",...ee.parameters?.docs?.source}}},te.parameters={...te.parameters,docs:{...te.parameters?.docs,source:{originalSource:"() => {\n  const mapHook = useMap({\n    mapId: undefined\n  });\n  useAddProtocol({\n    protocol: 'tcx',\n    handler: XMLProtocolHandler\n  });\n  useEffect(() => {\n    if (!mapHook.map?.getSource('kml-source')) {\n      mapHook.map?.addSource('tcx-source', {\n        type: 'geojson',\n        data: `tcx://tcx/example.tcx`\n      });\n    }\n    mapHook.map?.jumpTo(({\n      center: [32.711545, 34.844962],\n      zoom: 9\n    } as JumpToOptions));\n  }, [mapHook.map]);\n  return <>\n            <MlLayer layerId={'UseAddProtocolLayer'} options={({\n      type: 'circle',\n      source: 'tcx-source',\n      paint: {\n        'circle-color': '#ff45fa',\n        'circle-stroke-color': '#992578',\n        'circle-stroke-width': 1,\n        'circle-radius': 2\n      }\n    } as useLayerProps['options'])} insertBeforeLayer={'waterway-name'} />\n\n            <BackgroundLayers />\n        </>;\n}",...te.parameters?.docs?.source}}},oe.parameters={...oe.parameters,docs:{...oe.parameters?.docs,source:{originalSource:"() => {\n  const mapHook = useMap({\n    mapId: undefined\n  });\n  useAddProtocol({\n    protocol: 'topojson',\n    handler: TopojsonProtocolHandler\n  });\n  useEffect(() => {\n    if (!mapHook.map?.getSource('topojson-source')) {\n      mapHook.map?.addSource('topojson-source', {\n        type: 'geojson',\n        data: `topojson://topojson/usa.topojson`\n      });\n    }\n    mapHook.map?.jumpTo(({\n      center: [-99.110122, 39.827183],\n      zoom: 4\n    } as JumpToOptions));\n  }, [mapHook.map]);\n  return <>\n            <MlLayer layerId={'UseAddProtocolLayer'} options={({\n      type: 'line',\n      source: 'topojson-source',\n      paint: {\n        'line-color': ['match', ['get', 'fromObject'], 'land', '#111111', 'states', '#009EE0', 'counties', '#747577', 'white' // otherwise\n        ],\n        'line-width': ['match', ['get', 'fromObject'], 'land', 3, 'states', 2, 'counties', 1, 1 // otherwise\n        ]\n      }\n    } as useLayerProps['options'])} insertBeforeLayer={'waterway-name'} />\n\n            <BackgroundLayers />\n        </>;\n}",...oe.parameters?.docs?.source}}},ne.parameters={...ne.parameters,docs:{...ne.parameters?.docs,source:{originalSource:"() => {\n  const mapHook = useMap({\n    mapId: undefined\n  });\n  const [openSidebar, setOpenSidebar] = useState(true);\n  const layerContext = useContext(LayerContext);\n  const [currentDemo, setCurrentDemo] = useState<string>('csv');\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const props: TemplateProps = currentProps[currentDemo];\n  const optionsURL = '?' + new URLSearchParams((props.options as string)).toString();\n  useAddProtocol({\n    protocol: props.protocol,\n    handler: props.handler\n  });\n  useEffect(() => {\n    layerContext.updateStyle((bright as StyleSpecification));\n    layerContext.setLayers([props.protocol === 'mbtiles' ? {\n      type: 'vt',\n      name: 'useAddProtocolLayer',\n      config: ({\n        layerId: 'useAddProtocolLayer',\n        url: props.protocol + '://' + props.filePath + '/{z}/{x}/{y}',\n        layers: props.layers,\n        insertBeforeLayer: props.insertBeforeLayer,\n        sourceOptions: props.sourceOptions\n      } as MlVectorTileLayerProps)\n    } : {\n      type: 'geojson',\n      name: 'useAddProtocolLayer',\n      config: ({\n        layerId: 'useAddProtocolLayer',\n        type: props.type || 'line',\n        options: {\n          source: props.sourceId\n        },\n        paint: props.paint\n      } as MlGeoJsonLayerProps)\n    }]);\n  }, [currentDemo]);\n  useEffect(() => {\n    if (!mapHook.map?.getSource(props.sourceId) && props.protocol !== 'mbtiles') {\n      mapHook.map?.addSource(props.sourceId, {\n        type: 'geojson',\n        data: props.protocol + '://' + props.filePath + optionsURL\n      });\n    }\n    if (props.flyTo) {\n      mapHook.map?.flyTo((props.flyTo as FlyToOptions));\n    }\n  }, [mapHook.map, currentDemo]);\n  return <>\n            <TopToolbar buttons={<>\n                        <Button variant={openSidebar ? 'contained' : 'outlined'} onClick={() => setOpenSidebar(!openSidebar)} sx={{\n        marginRight: {\n          xs: '0px',\n          sm: '10px'\n        }\n      }}>\n                            Sidebar\n                        </Button>\n\n                        <Button id=\"basic-button\" variant=\"contained\" aria-controls={open ? 'basic-menu' : undefined} aria-haspopup=\"true\" aria-expanded={open ? 'true' : undefined} onClick={(event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n      }}>\n                            Example Configs\n                        </Button>\n                        <Menu id=\"basic-menu\" anchorEl={anchorEl} open={open} onClose={() => setAnchorEl(null)} MenuListProps={{\n        'aria-labelledby': 'basic-button'\n      }}>\n                            {Object.keys(currentProps).map(el => <MenuItem onClick={() => setCurrentDemo(el)} key={el} selected={el === currentDemo}>\n                                    {el}\n                                </MenuItem>)}\n                        </Menu>\n                    </>} />\n\n            <Sidebar open={openSidebar} setOpen={setOpenSidebar} name={props.protocol.toUpperCase() + ' demo'}>\n                <Tooltip title={'add a new' + props.protocol + ' to the map'}>\n                    <AddLayerButton onComplete={config => layerContext.setLayers(current => [...current, config])} layerTypes={[props.protocol]} />\n                </Tooltip>\n\n                <Box sx={{\n        height: '35%'\n      }}>\n                    <Typography variant=\"h6\">{'Layers'}</Typography>\n                    <LayerList>\n                        <LayerListItemFactory layers={layerContext.layers} setLayers={layerContext.setLayers} insertBeforeLayer=\"useAddProtocolLayer\" fitBoundsOptions={{\n            padding: {\n              top: 50,\n              bottom: 50,\n              left: 25,\n              right: 25\n            }\n          }} />\n                    </LayerList>\n                </Box>\n\n                <DemoDescriptions json={protocolDescriptions} section={props.protocol} title={'About this demo: '} />\n            </Sidebar>\n        </>;\n}",...ne.parameters?.docs?.source}}};const re=["MbTiles","CSVOrTSV","CSVWithOptions","OSM","GPX","KML","TCX","Topojson","CatalogueDemo"]},73641:(e,t,o)=>{"use strict";o.d(t,{A:()=>c});var a=o(96540),n=o(95532),r=o(32348),i=(o(18582),o(68704)),l=o(70008),s=o(30901),p=o(74848);const c=[function(e,t){var o,c=(0,a.useMemo)((function(){var e;return(0,s.A)(null==t||null===(e=t.globals)||void 0===e?void 0:e.theme)}),[null==t||null===(o=t.globals)||void 0===o?void 0:o.theme]);return(0,p.jsx)("div",{className:"fullscreen_map",children:(0,p.jsx)(n.mO,{children:(0,p.jsxs)(l.A,{theme:c,children:[(0,p.jsx)(e,{}),(0,p.jsx)(r.A,{mapId:"map_1",options:{zoom:12.5,center:[7.0851268,50.73884]}}),(0,p.jsx)(i.A,{showZoomButtons:!1,mapId:"map_1"})]})})})}]},67920:()=>{}}]);